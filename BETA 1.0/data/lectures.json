var lectures = {
  "Computação Musical e Sonologia": {
    "author": {
      "name": "Marcelo Queiroz",
      "info": "<p>Marcelo Queiroz é Professor Associado do Departamento de Ciência da Computação e vice-coordenador do NuSom - Núcleo de Pesquisas em Sonologia da Universidade de São Paulo. Sua formação inclui bacharelados em Ciência da Computação e em Música (Composição), mestrado em Matemática Aplicada e doutorado e livre-docência em Ciência da Computação. Seus interesses de pesquisa incluem processamento sonoro/musical/de voz, acústica computacional, música móvel e em rede, e análise/composição/performance/improvisação musicais mediadas por tecnologia.</p>",
      "image": "http://bcc.ime.usp.br/encontro/images/14.409b6eff.jpg"
    },
    "info": "<p>Nesta palestra vamos apresentar conceitos fundamentais associados à representação e ao processamento de áudio e música no computador. Falaremos da representação digital de sinais de áudio e da transformada de Fourier, de representações simbólicas (como MIDI) e técnicas de síntese, da extração de parâmetros acústicos e informações musicais a partir de sinais, e da simulação de ambientes acústicos e instrumentos musicais usando técnicas computacionais. Finalmente, ilustraremos os conceitos com resultados de projetos de pesquisa desenvolvidos em colaboração entre os grupos de pesquisa em Computação Musical do IME/USP e Sonologia da ECA/USP.</p>",    
    "image": ""
  },
  "A Teoria IMEana aplicada no desenvolvimento de jogos": {
    "author": {
      "name": "Vinicius Vecchi",
      "info": "<p>Formado em Matemática Aplicada e Computacional pelo IME-USP, desenvolvedor de jogos desde 2008. Um dos sócios fundadores da VRMonkey, empresa que produziu o Dinos do Brasil para o museu Catavento Cultural, jogos para GearVR, Oculus Rift e HTC Vive, além de experiências VR e Vídeos 360 sob contratos de terceiros.</p>",
      "image": "http://bcc.ime.usp.br/encontro/images/2.14c59fd9.jpg"
    },
    "info": "<p>Nessa palestra vou contar um pouco de como usei conhecimentos teóricos do IME na prática de produção de jogos, incluindo Algoritmos, Álgebra Linear e Análise Numérica.</p>",
    "image": ""    
  },
  "Smart Cities": {
    "author": {
      "name": "Kiev Gama",
      "info": "<p>Professor Adjunto do Centro de Informática (CIn) da Universidade Federal de Pernambuco (UFPE). Obteve o doutorado em Ciência da Computação pela Université de Grenoble (2011), com tese focada em dependabilidade em plataformas dinâmicas baseadas em componentes de software. Tem interesse em pesquisa aplicada preferencialmente no contexto de Internet das Coisas e Cidades Inteligentes, e que envolvam as seguintes áreas: Sistemas distribuídos, middleware e engenharia de software baseada em componentes (CBSE). Associado da Sociedade Brasileira de Computação (SBC).</p>",
      "image": "http://bcc.ime.usp.br/encontro/images/2.14c59fd9.jpg"
    },
    "info": "<p class=\"typography--italic typography--urderline\">Top-down ou bottom-up? O papel da computação em diferentes abordagens para cidades inteligentes</p><p>O crescente aumento populacional urbano tem trazido grandes desafios para os gestores de cidades. Problemas relacionados ao tráfego, segurança, educação, saúde, consumo de água e energia, conservação de vias e espaços públicos, dentre outras questões urbanas, tem sido cada vez mais difíceis de serem administrados. As tecnologias de informação e comunicação (TICs) podem ter papel importante, auxiliando no monitoramento, controle e tomada de decisões diante de tais problemas. O conceito que vem sendo chamado de Cidades Inteligentes (Smart Cities) é uma tendência mundial relativa ao emprego de práticas de sustentabilidade e ao uso de soluções intensivas de TICs como instrumentos para tornar cidades mais inteligentes, otimizando certos aspectos da vida urbana.</p><p>Enquanto governos começaram a trazer este novo conceito por meio de estratégias top-down, focando em soluções de monitoramento e controle na tentativa de reduzir o caos nas cidades, também tomaram corpo diversas iniciativas espalhadas pelo mundo que trazem uma abordagem bottom-up. Neste caso, os próprios cidadãos podem tornar-se atores fundamentais no ecossistema de inovação em cidades inteligentes. Esta palestra traz uma discussão acerca do papel da computação em ambas abordagens e de desafios tecnológicos existentes nestes cenários.</p>",
    "image": ""    
  },
  "Jorge Stolfi": {
    "author": {
      "name": "Geometria Computacional e Aplicações",
      "info": "<p>Jorge Stolfi (São Paulo, 1950) é um professor de ciências da computação da Universidade Estadual de Campinas, realizando pesquisas de várias áreas da computação e matemática aplicada, especialmente processamento de imagens, visão computacional, aproximação de funções, computação auto-validada, Geometria computacional, otimização e reconhecimento de padrões. Também atua nas áreas de teoria da computação, estrutura de dados, análise de algoritmos, teoria dos grafos, e processamento de linguagens naturais.</p>",
      "image": "http://bcc.ime.usp.br/encontro/images/2.14c59fd9.jpg"
    },
    "info": "<p>Os primeiros algoritmos para resolver problemas geométricos de que se tem notícia foram descobertos há uns dois ou três milênios. Na verdade, para os gregos da Antiguidade, geometria e computação eram praticamente sinônimos. (O algoritmo de Euclides para o MDC, por exemplo, era formulado como um problema de geometria).</p><p>Computadores têm sido usados para cálculos geométricos, por exemplo em engenharia civil, desde sua invenção. Entretanto, a geometria computacional nasceu como um ramo da teoria da computação em 1978, com a tese de M. I. Shamos \"Computational Geometry\", publicada como livro em 1985.</p><p>O objetivo principal da disciplina é desenvolver e analisar algoritmos eficientes para todo tipo de problemas geométricos. A eficiência é geralmente expressa em termos de classe assintótica, como O(n log n) ou O(n^2), para o pior caso ou caso médio. Também interessa a complexidade de problemas, isto é, cotas inferiores para o custo de qualquer algoritmo que os resolva.</p><p>Geometria computacional tem aplicações em praticamente todas as áreas da ciência e tecnologia, de agronomia a zoologia. Dentre as aplicações mais avançadas e massivas estão computação gráfica, modelagem geométrica, cartografia, usinagem e prototipagem, e análise estrutural.</p><p>Nesta palestra pretendo dar uma noção do espírito da geometria computacional descrevendo alguns algoritmos clássicos (e úteis), e alguns problemas práticos que recaem em problemas não triviais da área.</p>Créditos da foto: Por <a href=\"//commons.wikimedia.org/wiki/User:Horadrim\" title=\"User:Horadrim\">Horadrim</a> - <span class=\"int-own-work\" lang=\"pt\">Obra do próprio</span>, <a href=\"http://creativecommons.org/licenses/by-sa/4.0\" title=\"Creative Commons Attribution-Share Alike 4.0\">CC BY-SA 4.0</a>, <a href=\"https://commons.wikimedia.org/w/index.php?curid=50981425\">Ligação</a>",
    "image": ""    
  }
}